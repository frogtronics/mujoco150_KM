function seq = quat2eul(quat,sequence)
%%QUAT2EUL
%   Converts quaternion to euler notation
%
%   seq = QUAT2EUL(quat) uses default 'xyz' sequence
%
%   seq = QUAT2EUL(quat,sequence) allows specification of a rotation
%       sequence within the set:
%       'zyx, zyz, zxy, zxz, yxz, yxy, yzx, yzy, xyz, xyx, xzy, xzx'
%
%
%   code adapted from:
%   http://bediyap.com/programming/convert-quaternion-to-euler-rotations/
%
%   2018 Enrico Eberhard

quat = normalize(quat);

if nargin<2
    sequence = 'xyz';
end

q = struct('w',quat(1),'x',quat(2),'y',quat(3),'z',quat(4));

switch sequence

    case 'xyz'
          seq = threeaxisrot( -2*(q.y*q.z - q.w*q.x), ...
                        q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z, ...
                        2*(q.x*q.z + q.w*q.y), ...
                       -2*(q.x*q.y - q.w*q.z), ... 
                        q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z);
                    
    case 'zyx'
          seq = threeaxisrot( 2*(q.x*q.y + q.w*q.z), ...
                     q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z, ...
                    -2*(q.x*q.z - q.w*q.y), ...
                     2*(q.y*q.z + q.w*q.x), ...
                     q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z);
                    

    case 'zyz'
          seq = twoaxisrot( 2*(q.y*q.z - q.w*q.x), ...
                   2*(q.x*q.z + q.w*q.y), ...
                   q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z, ...
                   2*(q.y*q.z + q.w*q.x), ...
                  -2*(q.x*q.z - q.w*q.y));

    case 'zxy'
          seq = threeaxisrot( -2*(q.x*q.y - q.w*q.z), ...
                      q.w*q.w - q.x*q.x + q.y*q.y - q.z*q.z, ...
                      2*(q.y*q.z + q.w*q.x), ...
                     -2*(q.x*q.z - q.w*q.y), ...
                      q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z);

    case 'zxz'
          seq = twoaxisrot( 2*(q.x*q.z + q.w*q.y), ...
                  -2*(q.y*q.z - q.w*q.x), ...
                   q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z, ...
                   2*(q.x*q.z - q.w*q.y), ...
                   2*(q.y*q.z + q.w*q.x));

    case 'yxz'
          seq = threeaxisrot( 2*(q.x*q.z + q.w*q.y), ...
                     q.w*q.w - q.x*q.x - q.y*q.y + q.z*q.z, ...
                    -2*(q.y*q.z - q.w*q.x), ...
                     2*(q.x*q.y + q.w*q.z), ...
                     q.w*q.w - q.x*q.x + q.y*q.y - q.z*q.z);
    case 'yxy'
          seq = twoaxisrot( 2*(q.x*q.y - q.w*q.z), ...
                   2*(q.y*q.z + q.w*q.x), ...
                   q.w*q.w - q.x*q.x + q.y*q.y - q.z*q.z, ...
                   2*(q.x*q.y + q.w*q.z), ...
                  -2*(q.y*q.z - q.w*q.x));

    case 'yzx'
          seq = threeaxisrot( -2*(q.x*q.z - q.w*q.y), ...
                      q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z, ...
                      2*(q.x*q.y + q.w*q.z), ...
                     -2*(q.y*q.z - q.w*q.x), ...
                      q.w*q.w - q.x*q.x + q.y*q.y - q.z*q.z);

    case 'yzy'
          seq = twoaxisrot( 2*(q.y*q.z + q.w*q.x), ...
                  -2*(q.x*q.y - q.w*q.z), ...
                   q.w*q.w - q.x*q.x + q.y*q.y - q.z*q.z, ...
                   2*(q.y*q.z - q.w*q.x), ...
                   2*(q.x*q.y + q.w*q.z));

    case 'xyx'
          seq = twoaxisrot( 2*(q.x*q.y + q.w*q.z), ...
                  -2*(q.x*q.z - q.w*q.y), ...
                   q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z, ...
                   2*(q.x*q.y - q.w*q.z), ...
                   2*(q.x*q.z + q.w*q.y));

    case 'xzy'
          seq = threeaxisrot( 2*(q.y*q.z + q.w*q.x), ...
                     q.w*q.w - q.x*q.x + q.y*q.y - q.z*q.z, ...
                    -2*(q.x*q.y - q.w*q.z), ...
                     2*(q.x*q.z + q.w*q.y), ...
                     q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z);

    case 'xzx'
          seq = twoaxisrot( 2*(q.x*q.z - q.w*q.y), ...
                   2*(q.x*q.y + q.w*q.z), ...
                   q.w*q.w + q.x*q.x - q.y*q.y - q.z*q.z, ...
                   2*(q.x*q.z + q.w*q.y), ...
                  -2*(q.x*q.y - q.w*q.z));
                  
                  
                    
    otherwise
        error(['Unrecognized sequence "%s" - please use lower-case '...
            '"x" "y" or "z" to make a three term sequence'],sequence);
                    
end

end
                    

function res = threeaxisrot(r11, r12, r21, r31, r32)
  res(1) = atan2( r11, r12 );
  res(2) = asin ( r21 );
  res(3) = atan2( r31, r32 );
end

function res = twoaxisrot(r11, r12, r21, r31, r32)
  res(3) = atan2( r11, r12 ); %might need to swap 1 and 3
  res(2) = acos ( r21 );
  res(1) = atan2( r31, r32 );
end